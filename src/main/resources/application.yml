spring:
  application:
    name: order-processing-service
  kafka:
    bootstrap-servers: localhost:9092
    streams:
      application-id: order-processing-streams
      properties:
        commit.interval.ms: 1000
        processing.guarantee: exactly_once_v2
        num.stream.threads: 2
        num.standby.replicas: 1
        replication.factor: 3
        min.insync.replicas: 2
        acceptable.recovery.lag: 10000
        max.task.idle.ms: 300000
        task.timeout.ms: 300000
        window.store.change.log.additional.retention.ms: 86400000
        state.cleanup.delay.ms: 60000
        topology.optimization: optimize
        default.deserialization.exception.handler: org.apache.kafka.streams.errors.LogAndContinueExceptionHandler
        default.production.exception.handler: org.apache.kafka.streams.errors.DefaultProductionExceptionHandler

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    tags:
      application: ${spring.application.name}
    distribution:
      percentiles-histogram:
        http.server.requests: true
      sla:
        http.server.requests: 10ms, 50ms, 100ms, 200ms, 500ms

logging:
  level:
    root: INFO
    com.example: DEBUG
    org.apache.kafka: INFO
    org.springframework.kafka: INFO 